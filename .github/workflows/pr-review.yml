name: PR Review with Azure OpenAI

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  ai-review:
    runs-on: ubuntu-latest
    name: AI Code Review
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Azure OpenAI PR Review
        id: review
        uses: ./
        with:
          azure_openai_endpoint: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
          azure_openai_api_key: ${{ secrets.AZURE_OPENAI_API_KEY }}
          azure_openai_deployment_name: ${{ secrets.AZURE_OPENAI_DEPLOYMENT_NAME }}
          max_tokens: '1500'
          temperature: '0.1'
      
      - name: Comment on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const reviewResult = JSON.parse('${{ steps.review.outputs.review_result }}');
            
            let commentBody = `## ü§ñ AI Code Review\n\n`;
            commentBody += `**Overall Score:** ${reviewResult.overall_score}/10\n`;
            commentBody += `**Status:** ${reviewResult.approved ? '‚úÖ Approved' : '‚ùå Changes Requested'}\n\n`;
            commentBody += `### Summary\n${reviewResult.summary}\n\n`;
            
            if (reviewResult.comments && reviewResult.comments.length > 0) {
              commentBody += `### Comments\n\n`;
              
              for (const comment of reviewResult.comments) {
                const emoji = comment.severity === 'error' ? '‚ùå' : 
                             comment.severity === 'warning' ? '‚ö†Ô∏è' : '‚ÑπÔ∏è';
                
                if (comment.filename && comment.line_number) {
                  commentBody += `${emoji} **${comment.filename}:${comment.line_number}**\n`;
                } else if (comment.filename) {
                  commentBody += `${emoji} **${comment.filename}**\n`;
                } else {
                  commentBody += `${emoji} **General**\n`;
                }
                
                commentBody += `  ${comment.message}\n\n`;
              }
            }
            
            commentBody += `---\n*Generated by Azure OpenAI PR Review Agent*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
